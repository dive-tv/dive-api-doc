<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.dive</groupId>
	<artifactId>dive-api-doc</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>


    <pluginRepositories>
        <pluginRepository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
                <version>1.2.0</version>
                <!--configuration>
                    <includePom>true</includePom>
                </configuration-->
                <executions>

                    <execution>
                        <id>output-ea-api-markdown</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>convertSwagger2markup</goal>
                        </goals>
                        <configuration>
                            <swaggerInput>${project.basedir}/templates/ea-api.json</swaggerInput>
                            <!--outputDir>${project.build.directory}/ea-api/asciidoc</outputDir-->
                            <outputDir>${project.build.directory}/ea-api/markdown</outputDir>
                            <config>
                                <!--swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage-->
                                <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>
                                <!--swagger2markup.generatedExamplesEnabled>true</swagger2markup.generatedExamplesEnabled-->
                                <!--swagger2markup.interDocumentCrossReferencesEnabled>true</swagger2markup.interDocumentCrossReferencesEnabled-->
                                <swagger2markup.overviewDocument>_ea.api.overview</swagger2markup.overviewDocument>
                                <swagger2markup.pathsDocument>_ea.api.paths</swagger2markup.pathsDocument>
                                <swagger2markup.definitionsDocument>_ea.api.definitions</swagger2markup.definitionsDocument>
                                <swagger2markup.securityDocument>_ea.api.security</swagger2markup.securityDocument>
                                <!--swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy-->
                                <swagger2markup.tagOrderBy>AS_IS</swagger2markup.tagOrderBy>
                                <swagger2markup.operationOrderBy>AS_IS</swagger2markup.operationOrderBy> 
                                <swagger2markup.definitionOrderBy>AS_IS</swagger2markup.definitionOrderBy> 
                                <swagger2markup.parameterOrderBy>AS_IS</swagger2markup.parameterOrderBy> 
                                <swagger2markup.propertyOrderBy>AS_IS</swagger2markup.propertyOrderBy> 
                                <swagger2markup.responseOrderBy>AS_IS</swagger2markup.responseOrderBy> 
                            </config>
                        </configuration>
                    </execution>

                    <execution>
                        <id>output-ar-api-markdown</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>convertSwagger2markup</goal>
                        </goals>
                        <configuration>
                            <swaggerInput>${project.basedir}/templates/ar-api.json</swaggerInput>
                            <!--outputDir>${project.build.directory}/ar-api/asciidoc</outputDir-->
                            <outputDir>${project.build.directory}/ar-api/markdown</outputDir>
                            <config>
                                <!--swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage-->
                                <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>
                                <!--swagger2markup.generatedExamplesEnabled>true</swagger2markup.generatedExamplesEnabled-->
                                <!--swagger2markup.interDocumentCrossReferencesEnabled>true</swagger2markup.interDocumentCrossReferencesEnabled-->
                                <swagger2markup.overviewDocument>_ar.api.overview</swagger2markup.overviewDocument>
                                <swagger2markup.pathsDocument>_ar.api.paths</swagger2markup.pathsDocument>
                                <swagger2markup.definitionsDocument>_ar.api.definitions</swagger2markup.definitionsDocument>
                                <swagger2markup.securityDocument>_ar.api.security</swagger2markup.securityDocument>
                                <!--swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy-->
                                <swagger2markup.tagOrderBy>AS_IS</swagger2markup.tagOrderBy>
                                <swagger2markup.operationOrderBy>AS_IS</swagger2markup.operationOrderBy> 
                                <swagger2markup.definitionOrderBy>AS_IS</swagger2markup.definitionOrderBy> 
                                <swagger2markup.parameterOrderBy>AS_IS</swagger2markup.parameterOrderBy> 
                                <swagger2markup.propertyOrderBy>AS_IS</swagger2markup.propertyOrderBy> 
                                <swagger2markup.responseOrderBy>AS_IS</swagger2markup.responseOrderBy> 
                            </config>
                        </configuration>
                    </execution>

                    <execution>
                        <id>output-dive-api-markdown</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>convertSwagger2markup</goal>
                        </goals>
                        <configuration>
                            <swaggerInput>${project.basedir}/templates/dive-api.json</swaggerInput>
                            <!--outputDir>${project.build.directory}/dive-api/asciidoc</outputDir-->
                            <outputDir>${project.build.directory}/dive-api/markdown</outputDir>
                            <config>
                                <!--swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage-->
                                <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>
                                <!--swagger2markup.generatedExamplesEnabled>true</swagger2markup.generatedExamplesEnabled-->
                                <!--swagger2markup.interDocumentCrossReferencesEnabled>true</swagger2markup.interDocumentCrossReferencesEnabled-->
                                <swagger2markup.overviewDocument>_dive.api.overview</swagger2markup.overviewDocument>
                                <swagger2markup.pathsDocument>_dive.api.paths</swagger2markup.pathsDocument>
                                <swagger2markup.definitionsDocument>_dive.api.definitions</swagger2markup.definitionsDocument>
                                <swagger2markup.securityDocument>_dive.api.security</swagger2markup.securityDocument>
                                <!--swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy-->
                                <swagger2markup.tagOrderBy>AS_IS</swagger2markup.tagOrderBy>
                                <swagger2markup.operationOrderBy>AS_IS</swagger2markup.operationOrderBy> 
                                <swagger2markup.definitionOrderBy>AS_IS</swagger2markup.definitionOrderBy> 
                                <swagger2markup.parameterOrderBy>AS_IS</swagger2markup.parameterOrderBy> 
                                <swagger2markup.propertyOrderBy>AS_IS</swagger2markup.propertyOrderBy> 
                                <swagger2markup.responseOrderBy>AS_IS</swagger2markup.responseOrderBy> 
                            </config>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!--plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>output-api-html</id>
                        <phase>none</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/ea-api/asciidoc</sourceDirectory>
                            <outputDirectory>${project.build.directory}/ea-api/html/</outputDirectory>
                            <backend>html5</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->
        </plugins>
    </build>
</project>